""" –ú–æ–¥—É–ª—å —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏, –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–º–∏ –≤ main"""


def send(message, nameCatalog, bot):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ Dropbox"""
    bot.send_message(message.chat.id, "–ó–∞–≥—Ä—É–∂–∞—é...")
    import requests
    import dropbox
    from passwords import ACESS_TOKEN
    dbx = dropbox.Dropbox(ACESS_TOKEN)
    for entry in dbx.files_list_folder('/' + nameCatalog).entries:
        # print(entry.name)
        # print(entry.name[-3::])
        if entry.name[-3::].lower() == 'jpg':
            # print('/' + nameCatalog + '/' + entry.name[:-3:] + "txt")
            link_photo = dbx.files_get_temporary_link(entry.path_lower).link
            try:
                link_descriprion = dbx.files_get_temporary_link('/' + nameCatalog + '/' + entry.name[:-3:] + "txt").link
                bot.send_photo(message.chat.id, link_photo, caption=requests.get(link_descriprion).content,
                               disable_notification=True)
            except Exception as ex:
                print('–ù–µ –Ω–∞—à–ª–æ—Å—å —Ñ–∞–π–ª–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∫ —Ñ–æ—Ç–æ')
    from telebot import types
    itembtn1 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥')
    itembtn2 = types.KeyboardButton('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
    markup = types.ReplyKeyboardMarkup(True, True)
    markup.add(itembtn1, itembtn2)
    bot.send_message(message.chat.id, "–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?", reply_markup=markup)


def send_to_all(text, bot):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–≤—Ç–æ—Ä—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    import pymongo
    import passwords
    try:
        # –ü–û–î–ö–õ–Æ–ß–ê–ï–ú–°–Ø –ö MONGOCLIENT
        client = pymongo.MongoClient(passwords.mongodb_key)
        # –ü–û–õ–£–ß–ê–ï–ú –ë–ê–ó–£ –î–ê–ù–ù–´–•
        db = client['Project_for_messages_from_ceramic_bot']
        # –ü–û–õ–£–ß–ê–ï–ú –ö–û–õ–õ–ï–ö–¶–ò–Æ
        collection = db["MainCluster"]
        from telebot import types
        button1 = types.InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")
        markup = types.InlineKeyboardMarkup()
        markup.add(button1)
        for instance in db.posts.find({}):
            try:
                bot.send_message(instance['message_chat_id'], text, reply_markup=markup)
            except:
                pass
    except Exception as ex:
        import logging
        logging.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º: " + str(ex))
        bot.send_message(108020326, "‚ÄºÔ∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å–æ–æ–±—â–µ–Ω–∏—è! :( ‚ÄºÔ∏è")


def sign_up_master_class(message, bot):
    """–§—É–Ω–∫—Ü–∏—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –º–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å"""
    from telebot import types
    button1 = types.InlineKeyboardButton(text="üîô –ú–µ–Ω—é", callback_data="menu")
    markup = types.InlineKeyboardMarkup()
    markup.row(button1)
    bot.send_message(message.chat.id, "–ü–æ–∑–¥—Ä–∞–ª—è—é, –∑–∞—è–≤–∫–∞ –Ω–∞ –º–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, "
                                      "–æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ ‚òï", reply_markup=markup)
    bot.send_message(108020326, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –∂–µ–ª–∞—é—â–∏–π –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ #–º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–µ.\n"
                                "–í–æ—Ç –µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—ã: @" + message.chat.username)


def add_person(message, bot):
    """ –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–¥ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    import pymongo
    import passwords
    try:
        # –ü–û–î–ö–õ–Æ–ß–ê–ï–ú–°–Ø –ö MONGOCLIENT
        client = pymongo.MongoClient(passwords.mongodb_key)

        # –ü–û–õ–£–ß–ê–ï–ú –ë–ê–ó–£ –î–ê–ù–ù–´–•
        db = client['Project_for_messages_from_ceramic_bot']

        # –ü–û–õ–£–ß–ê–ï–ú –ö–û–õ–õ–ï–ö–¶–ò–Æ
        collection = db["MainCluster"]

        if db.posts.find_one({"message_chat_id": message.chat.id}) is None:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—É—â—é—é –¥–∞—Ç—É
            from datetime import date
            import time
            time_first = date(time.localtime()[0], time.localtime()[1], time.localtime()[2])

            # –î–û–ë–ê–í–õ–Ø–ï–ú –í –ë–î
            new_person = {"message_chat_id": message.chat.id,
                       "username": "@"+str(message.chat.username),
                       "time_of_first_using": str(time_first)}

            db.posts.insert_one(new_person)
            bot.send_message(108020326, "–ê–Ω—è! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –µ—â—ë –æ–¥–∏–Ω –Ω–æ–≤—ã–π —á–µ–ª–æ–≤–µ–∫ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –º–Ω–æ—é!\n"
                                        "–û–±—â–µ–µ –∫–æ–ª-–≤–æ: " + str(db.posts.count_documents({})))
    except Exception as ex:
        import logging
        logging.error("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–¥ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + str(ex))
        bot.send_message(108020326, "‚ÄºÔ∏è–ê–Ω—è, –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–¥ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + str(ex) + " ‚ÄºÔ∏è")
