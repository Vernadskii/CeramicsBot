import telebot
import passwords
bot = telebot.TeleBot(passwords.key)
# bot.delete_webhook()

commands = {  # command description used in the "help" command
    'catalog'      : '–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ üì¶',
    'master_class' : '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã üë©‚Äçüè´',
    'key '         : '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π üìù',
    'help '       : '–í–æ–∑–≤—Ä–∞—Ç –∫ —Ä–∞–∑–¥–µ–ª–∞–º üè≥Ô∏è',
}


import os
from flask import Flask, request
import logging
logger = telebot.logger
telebot.logger.setLevel(logging.INFO)
server = Flask(__name__)
os.environ['FLASK_ENV'] = 'development'


@server.route('/' + passwords.key, methods=['POST'])
def getMessage():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "!", 200


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, str(message.from_user.first_name)+", —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –º–∞—Å—Ç–µ—Ä—Å–∫–∞—è " +
                "–∫–µ—Ä–∞–º–∏–∫–∏ CeramicsWithLove!")
    command_help(message)
    from functions import add_person
    add_person(message, bot)


@bot.message_handler(commands=['key'])
def get_text_messages(message):
    bot.send_message(message.chat.id, "C–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ –Ω–∞—à–µ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π. –£–ø—Å, –º–Ω–µ –ø–æ–∫–∞"
                                      " –Ω–µ—á–µ–≥–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å :( ")


@bot.message_handler(commands=['master_class'])
def master_class(message):
    from telebot import types
    button1 = types.InlineKeyboardButton(text="üéì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å", callback_data="sign_up_master_class")
    button2 = types.InlineKeyboardButton(text="üîô  –ù–∞–∑–∞–¥", callback_data="menu")
    markup = types.InlineKeyboardMarkup()
    markup.row(button1)
    markup.row(button2)
    bot.send_message(message.chat.id, "–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤ –¥–≤–∞ –¥–Ω—è.\n–í –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å 2,5-3 —á–∞—Å–∞ –ª–µ–ø–∏–º\n" \
                                      "–ü–æ–ø—Ä–æ–±—É–µ–º <b>—Ä–∞–∑–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏</b> —Ä—É—á–Ω–æ–π –ª–µ–ø–∫–∏ü§≤üèª\n"
                                      "–ü–æ—Ç–æ–º –∏–∑–¥–µ–ª–∏—è —Å–æ—Ö–Ω—É—Ç –∏ –ø—Ä–æ—Ö–æ–¥—è—Ç –ø–µ—Ä–≤—ã–π –æ–±–∂–∏–≥\n–ò –∑–∞—Ç–µ–º –º—ã "
                                      "<b>–≤—Å—Ç—Ä–µ—á–∞–µ–º—Å—è –µ—â—ë —Ä–∞–∑</b> –∏ "
                                      "–≤—ã —Å–≤–æ–∏ –∏–∑–¥–µ–ª–∏—è –ø–æ–∫—Ä—ã–≤–∞–µ—Ç–µ —Ü–≤–µ—Ç–Ω—ã–º–∏ <b>–≥–ª–∞–∑—É—Ä—è–º–∏</b>\n–ü–æ—Ç–æ–º –∏–∑–¥–µ–ª–∏—è –µ—â–µ —Ä–∞–∑ "
                                      "–æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ –ø–µ—á–∫—É \n–ò –≤—É–∞–ª—è! –ú–æ–∂–µ—Ç–µ –∏—Ö –∑–∞–±–∏—Ä–∞—Ç—å :)\n"
                                      "<b>–ü–æ–ª—É—á–∏—Ç—Å—è 3-5 –∏–∑–¥–µ–ª–∏–π</b> (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞)"
                                      "\n1500‚ÇΩ —Å —á–µ–ª–æ–≤–µ–∫–∞ –∑–∞ –¥–≤–∞ –¥–Ω—è\n–ì—Ä—É–ø–ø–∫–∞–º –æ—Ç 3 —á–µ–ª–æ–≤–µ–∫ <b>—Å–∫–∏–¥–∫–∞ 20%</b>",
                     parse_mode='HTML', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "sign_up_master_class":
        from functions import sign_up_master_class
        sign_up_master_class(call.message, bot)
    if call.data == "menu":
        command_help(call.message)


@bot.message_handler(commands=['help'])
def command_help(message):
    """–í—ã–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"""
    cid = message.chat.id
    help_text = "–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑–¥–µ–ª—ã:\n"
    for key in commands:  # generate help text out of the commands dictionary defined at the top
        help_text += "/" + key + ": "
        help_text += commands[key] + "\n"
    bot.send_message(cid, help_text)  # send the generated help page


@bot.message_handler(commands=['catalog'])
def get_text_messageCatalog(message):
    """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã –∏–∑ –º–æ–¥—É–ª—è, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏"""
    from telebot import types
    markup = types.ReplyKeyboardMarkup(True, True)
    itembtn1 = types.KeyboardButton('–¢–∞—Ä–µ–ª–∫–∏')
    itembtn2 = types.KeyboardButton('–í–∞–∑—ã')
    itembtn3 = types.KeyboardButton('–ö—Ä—É–∂–∫–∏')
    itembtn4 = types.KeyboardButton('–ü—Ä–æ—á–µ–µ')
    markup.add(itembtn1, itembtn2, itembtn3, itembtn4)
    bot.send_message(message.chat.id,"–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª", reply_markup=markup)


@bot.message_handler(commands=['send_messageAnna'])
def send_message_to_all(message):
    from functions import send_to_all
    text = message.text[18:]    # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
    if text != '' and text != ' ':
        send_to_all(text, bot)


LIST_OF_COMMANDS = {'–ü–ª–æ—Å–∫–∏–µ —Ç–∞—Ä–µ–ª–∫–∏': 'Flat plates', '–ì–ª—É–±–æ–∫–∏–µ —Ç–∞—Ä–µ–ª–∫–∏': 'Deep plates', '–í–∞–∑—ã': 'Vases',
                    '–ö—Ä—É–∂–∫–∏': 'Cups', '–ü—Ä–æ—á–µ–µ': 'Other'}


@bot.message_handler(content_types=['text'])
def handle_text(message):
    if message.text in LIST_OF_COMMANDS:
        from functions import send
        send(message, LIST_OF_COMMANDS[message.text], bot)
    elif message.text == '–¢–∞—Ä–µ–ª–∫–∏':
        from telebot import types
        markup = types.ReplyKeyboardMarkup(True, True)
        itembtn1 = types.KeyboardButton('–ü–ª–æ—Å–∫–∏–µ —Ç–∞—Ä–µ–ª–∫–∏')
        itembtn2 = types.KeyboardButton('–ì–ª—É–±–æ–∫–∏–µ —Ç–∞—Ä–µ–ª–∫–∏')
        markup.add(itembtn1, itembtn2)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–∏–ø", reply_markup=markup)
    elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥':
        get_text_messageCatalog(message)
    elif message.text == '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑':
        from telebot import types
        markup = types.ReplyKeyboardMarkup(True, True, True)
        itembtn1 = types.KeyboardButton("–•–æ—á—É —á—Ç–æ–±—ã —Å–æ –º–Ω–æ–π —Å–≤—è–∑–∞–ª–∏—Å—å", request_contact = True)
        itembtn2 = types.KeyboardButton("–Ø —Å–∞–º –Ω–∞–ø–∏—à—É")
        markup.add(itembtn1, itembtn2)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –∑–∞–∫–∞–∑–∞", reply_markup=markup)
    elif message.text == '–Ø —Å–∞–º –Ω–∞–ø–∏—à—É':
        from telebot import types
        button1 = types.InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")
        markup = types.InlineKeyboardMarkup()
        markup.add(button1)
        bot.send_message(message.chat.id, '–¢–≤–æ–µ –ø–∏—Å—å–º–æ —É–∂–µ –∂–¥—É—Ç –ø–æ –∞–¥—Ä–µ—Å—É @annjuniper' + "\n"
                         + "–ú–æ–∂–µ—à—å –≤ –¥–æ–±–∞–≤–æ–∫ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –∏–∑–¥–µ–ª–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å",
                         reply_markup=markup)
    else: bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é :(' + "\n" + "–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /help")


@bot.message_handler(content_types=["contact"])
def save_contact(message):
    from telebot import types
    button1 = types.InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")
    markup = types.InlineKeyboardMarkup()
    markup.add(button1)
    bot.send_message(message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –±—É–¥—É—â–µ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–µ—Ä–∞–º–∏–∫–∏! "
                                      "–í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç –æ—Ç–æ—Å–ª–∞–Ω, —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è", reply_markup=markup)
    bot.send_message(108020326, "–ê–Ω—è! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –ø–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç: " + str(message.contact))


# bot.polling(none_stop=False, interval=0, timeout=20)


@server.route("/")
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url='https://telegrambot151.herokuapp.com/' + passwords.key)
    return "!", 200


server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))
